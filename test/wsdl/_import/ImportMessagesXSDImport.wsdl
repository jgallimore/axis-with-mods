<?xml version="1.0" encoding="UTF-8"?>
<definitions
    targetNamespace="urn:messages.import.test"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:addressTypes="urn:types.import.test">

<types>
  <schema
    targetNamespace="urn:types.import.test"
    xmlns:tns="urn:types.import.test"
    xmlns="http://www.w3.org/2001/XMLSchema">

    <import
      schemaLocation="Phone.xsd"
      namespace="urn:types.import.test">
    </import>
    
    <!-- Test that we ignore the SOAP encoding schema -->
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/" 
                schemaLocation="http://schemas.xmlsoap.org/soap/encoding/"/>
                
    <!-- Test that we can handle importing a URL schema from a file -->

    <!-- commented out Oct 20, 2002 by Glen - the schema has disappeared and
         the test was breaking.  If we want to test this functionality, we
         should a) actually use types from the imported schema, and b) import
         from a schema URL which we control.

         <xsd:import namespace="http://tempuri.org/fileToHttp/"
                schemaLocation="http://www.xml.org/xml/schema/9bffaafc/p2rLib.xsd"/>
     -->
    
    <complexType name="Address">
      <all>
        <element name="streetNum" type="int"/>
        <element name="streetName" type="string"/>
        <element name="city" type="string"/>
        <element name="state" type="string"/>
        <element name="zip" type="int"/>
        <element name="phoneNumber" type="tns:PhoneNumber"/>
      </all>
    </complexType>

  </schema>
</types>

<message name="empty"/>

<message name="InaddEntryRequest">
  <part name="key" type="xsd:string"/>
  <part name="value" type="addressTypes:Address"/>
</message>

<message name="IngetAddressFromNameRequest">
  <part name="key" type="xsd:string"/>
</message>

<message name="OutgetAddressFromNameResponse">
  <part name="value" type="addressTypes:Address"/>
</message>

<message name="Fault">
  <part name="value" type="xsd:string"/>
</message>

</definitions>
