<?xml version="1.0" ?>
<!DOCTYPE project [
        <!ENTITY properties SYSTEM "file:../../../xmls/properties.xml">
        <!ENTITY paths  SYSTEM "file:../../../xmls/path_refs.xml">
        <!ENTITY taskdefs SYSTEM "file:../../../xmls/taskdefs.xml">
        <!ENTITY taskdefs_post_compile SYSTEM "file:../../../xmls/taskdefs_post_compile.xml">
        <!ENTITY targets SYSTEM "file:../../../xmls/targets.xml">
]>

<!-- ===================================================================
<description>
   Test/Sample Component file for Axis

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To compile
        ant compile
   To execute
        ant run

Author:
  Matt Seibert mseibert@us.ibm.com

Copyright:
  Copyright (c) 2002-2003 Apache Software Foundation.
</description>
==================================================================== -->

<project default="compile">

    <property name="axis.home" location="../../.."/>
    <property name="componentName" value="test/wsdl/query"/>
    &properties;
    &paths;
    &taskdefs;
    &taskdefs_post_compile;
    &targets;

    <target name="clean">
        <echo message="Removing ${build.dir}/classes/${componentName} and ${build.dir}/work/${componentName}"/>
        <delete dir="${build.dir}/classes/${componentName}"/>
        <delete dir="${build.dir}/work/${componentName}"/>
    </target>

    <target name="compile">
        <echo message="Compiling test.wsdl.query"/>

        <!-- Query Test -->
        <!-- Copy Service and QueryBean  -->
        <copy todir="${build.dir}/work/${componentName}" overwrite="yes">
            <fileset dir="${test.dir}/wsdl/query">
                <include name="QueryTest.java"/>
                <include name="QueryBean.java"/>
            </fileset>
        </copy>

        <!-- Compile the Web Service -->
        <javac srcdir="${build.dir}/work" destdir="${build.dest}" debug="${debug}" nowarn="${nowarn}" source="${source}" fork="${javac.fork}">
            <classpath refid="classpath" />
            <include name="test/wsdl/query/**.java" />
            <exclude name="test/wsdl/query/*TestCase.java" />
            <exclude name="test/wsdl/query/*Impl.java" />
            <exclude name="test/wsdl/query/*Stub.java" />
            <exclude name="test/wsdl/query/*Locator.java" />
        </javac>

        <!-- Now create the real WSDL file -->
        <java2wsdl output="${axis.home}/build/work/${componentName}/QueryTest.wsdl"
            className= "test.wsdl.query.QueryTest"
            style="wrapped"
            useInheritedMethods="false"
            namespace="http://query.wsdl.test"
            location="http://localhost:8080/axis/services/QueryTest">
        </java2wsdl>

        <!-- Delete the intermediate class files so we recreate over a clean slate -->
        <delete dir="${build.dir}/classes/test/wsdl/query"/>

        <wsdl2java url="${axis.home}/build/work/${componentName}/QueryTest.wsdl"
            output="${axis.home}/build/work"
            deployscope="session"
            serverSide="yes"
            skeletonDeploy="no"
            verbose="no"
            testcase="no">
        </wsdl2java>

        <!-- copy test files over to work directory, including a static deploy
             file that does not have arrayMapings in it -->
        <copy todir="${build.dir}/work/test/wsdl/query" overwrite="yes">
            <fileset dir="${axis.home}/test/wsdl/query">
                <include name="*Impl.java"/>
                <include name="*TestCase.java"/>
                <include name="**.wsdd"/>
            </fileset>
        </copy>

        <!-- copy the file generation test files -->
        <copy todir="${build.dir}/work/test/" overwrite="yes">
            <fileset dir="${axis.home}/test/">
                <include name="*Impl.java"/>
                <include name="*TestCase.java"/>
            </fileset>
        </copy>

        <javac srcdir="${build.dir}/work" destdir="${build.dest}" nowarn="${nowarn}" source="${source}" fork="${javac.fork}"
            debug="${debug}">
            <classpath refid="classpath"/>
            <include name="test/*.java" />
            <include name="test/wsdl/query/*.java"/>
        </javac>

    </target>

    <target name="run">
        <antcall target="execute-Component"/>
    </target>

</project>
